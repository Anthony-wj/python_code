'''
    内核 操作系统的核心
    五大子系统：
        文件系统   linux：xfs、ext4   windows：NTFS
        内存管理   虚拟内存 虚拟地址映射 段页机制 缺页中断 伙伴系统
        进程调度
        网络接口   端口
        进程通信
'''

'''
    计算机组成： cpu(中央处理器) + 存储(磁盘、内存、外存、缓存) + IO
    资源：
        计算资源 cpu
        存储资源 内存磁盘等
        
    cpu时间片(抽象概念)
    对于单核cpu同一时刻只能有一个任务运行，引入时间片的概念是为了解决多任务操作系统
'''

'''
    并发：交替执行
    并行：同时执行
    
    线程：操作系统调度的最小单位(运行在进程之上)
    进程：操作系统进行资源分配的最小单位
    
    当你程序太慢了，有什么提升方法吗？
        引入多进程、多线程编程
'''

'''
    1.真正在cpu上运行的是线程
    2.线程共享内存空间；进程的内存是独立的
    3.一个线程只能属于一个进程，一个进程至少有一个线程
    4.同一个进程的线程之间可以直接交流，不同进程通过中间代理通信
    5.创建新的线程简单，创建新的进程需要对父进程进行克隆，所有进程都是由另一个进程创建的
    6.一个线程可以控制和操作同一个进程内的其他线程，进程只可以操作子进程
    7.一个主线程改变可能会影响其他线程，
    进程通信的方式：消息队列、socket、共享内存、管道、信号
'''

'''
    三态模型：
        运行
    就绪      阻塞
    
    就绪 -> 运行    调度
    运行 -> 就绪    时间片到
    运行 -> 阻塞    等待某事件如IO请求
    阻塞 -> 就绪    等待的事情发生
    
    无态模型
    新建    运行     结束
        就绪    阻塞
    
    新建 -> 就绪   创建进程
    阻塞 -> 结束   终止进程
     
'''

